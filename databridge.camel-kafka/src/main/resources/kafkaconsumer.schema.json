{
    "$id": "https://example.com/person.schema.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "kafkaconsumer.json",
    "type": "object",
    "required": [
        "uniqueId",
        "topic"
    ],
    "properties": {
        "uniqueId": {
            "type": "string",
            "description": "Unique ID to match options",
            "pattern": "^[a-z0-9-]+$"
        },
        "serverUrl": {
            "type": "string",
            "description": "IP or Hostname of the Kafka Server",
            "default": "127.0.0.1",
            "pattern": "^([a-z0-9-_\\.]+\\.[a-z]{1,3}|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})$"
        },
        "serverPort": {
            "description": "Port of the Kafka Server",
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "default": "9092"
        },
        "topic": {
            "type": "string",
            "description": "Topic of the variable in the MQTT Broker"
        },
        "maxPollRecords": {
            "type": "integer",
            "description": "The maximum number of records returned in a single call",
            "minimum": 500,
            "default": "5000"
        },
        "groupId": {
            "type": "string",
            "description": "A unique identifier of the consumer instance.",
            "pattern": "[a-z0-9-]+",
            "default": "basyx-updater"
        },
        "consumersCount": {
            "type": "integer",
            "description": "The number of consumers that connect to kafka server. Each consumer is run on a separate thread, that retrieves and process the incoming data.",
            "minimum": 1,
            "default": "1"
        },
        "seekTo": {
            "enum": ["BEGINNING", "END"],
            "description": "Define where to start reading from",
            "default": "BEGINNING"
        }
    }
}